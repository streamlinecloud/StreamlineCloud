name: Build and Release Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt' # Or 'zulu', 'amazon', etc.
        java-version: '17'

    - name: Build with Gradle
      run:  gradle "streamlinecloud-main:Make Main Project"
      
    - name: Build Docker image
      run: |
        docker build -t creperozelot/streamlinecloud:${{ github.sha }} .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push creperozelot/streamlinecloud:${{ github.sha }}

    - name: Build Docker image (Github Repo)
      run: |
        docker build -t ghcr.io/creperozelot/streamlinecloud:${{ github.sha }} .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ghcr.io/creperozelot/streamlinecloud:${{ github.sha }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Generate Random String
      id: random-string
      run: echo "::set-output name=tag::$(openssl rand -hex 16)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.random-string.outputs.tag }}
        release_name: Release ${{ steps.random-string.outputs.tag }}
        draft: false
        prerelease: false

    - name: Upload Docker image digest
      uses: actions/upload-artifact@v3
      with:
        name: docker-image-digest
        path: image-digest.txt 
