name: Check, Build and Release

on:
  push:
    branches:
      - main

jobs:

  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module: ['streamlinecloud-api', 'streamlinecloud-main', 'streamlinecloud-mc']

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt' # Or 'zulu', 'amazon', etc.
        java-version: '17'
        
    - name: Install Checkstyle
      run: |
        wget -q https://github.com/checkstyle/checkstyle/releases/download/checkstyle-9.3/checkstyle-9.3-all.jar -O checkstyle.jar

    - name: Run Checkstyle on ${{ matrix.module }}
      continue-on-error: false
      run: java -jar checkstyle.jar -c /google_checks.xml ${{ matrix.module }}/src/ > checkstyle-result-${{ matrix.module }}.txt

    - name: Show Checkstyle Report for ${{ matrix.module }}
      run: cat checkstyle-result-${{ matrix.module }}.txt


  build:
    runs-on: ubuntu-latest
    needs: check

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt' # Or 'zulu', 'amazon', etc.
        java-version: '17'
        
    - name: Build API with Gradle
      run:  gradle "streamlinecloud-api:Make API Project"

    - name: Build MAIN with Gradle
      run:  gradle "streamlinecloud-main:Make Main Project"

    - name: Build MC with Gradle
      run:  gradle "streamlinecloud-mc:Make MC Project"
      
    - name: Build Docker image
      run: |
        docker build -t creperozelot/streamlinecloud:${{ github.sha }} .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push creperozelot/streamlinecloud:${{ github.sha }}
        
    - name: Sharing API Jar file with job
      uses: actions/upload-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_api_${{ github.sha }}
        path: finished_builds/streamlinecloud-api/*.jar

    - name: Sharing MAIN Jar file with job
      uses: actions/upload-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_main_${{ github.sha }}
        path: finished_builds/streamlinecloud-main/*.jar

    - name: Sharing MC Jar file with job
      uses: actions/upload-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_mc_${{ github.sha }}
        path: finished_builds/streamlinecloud-mc/*.jar

  release:
    needs: [check, build]
    runs-on: ubuntu-latest
    permissions: write-all
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Generate Random String
      id: random-string
      run: echo "::set-output name=tag::$(openssl rand -hex 16)"

    - name: Download API Jar file for job
      uses: actions/download-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_api_${{ github.sha }}

    - name: Download MAIN Jar file for job
      uses: actions/download-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_main_${{ github.sha }}

    - name: Download MC Jar file for job
      uses: actions/download-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_mc_${{ github.sha }}

    - name: Generated Files
      id: list_files
      run: tree
      
    - name: Create Release
      id: create_release
      uses: marvinpinto/action-automatic-releases@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: ${{ steps.random-string.outputs.tag }}
        title: Release ${{ steps.random-string.outputs.tag }}
        prerelease: true
        files: |
            LICENCE.md
            *.jar

    - name: Upload Docker image digest
      uses: actions/upload-artifact@v3
      with:
        name: docker-image-digest
        path: image-digest.txt 
