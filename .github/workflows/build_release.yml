name: Check, Build, Release, and Docker

on:
  workflow_dispatch: # Dies erlaubt das manuelle Triggern des Workflows

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module: ['streamlinecloud-api', 'streamlinecloud-main', 'streamlinecloud-mc']

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt' # Oder 'zulu', 'amazon', etc.
        java-version: '17'
        
    - name: Install Checkstyle
      run: |
        wget -q https://github.com/checkstyle/checkstyle/releases/download/checkstyle-9.3/checkstyle-9.3-all.jar -O checkstyle.jar

    - name: Run Checkstyle on ${{ matrix.module }}
      continue-on-error: false
      run: java -jar checkstyle.jar -c /google_checks.xml ${{ matrix.module }}/src/ > checkstyle-result-${{ matrix.module }}.txt

    - name: Show Checkstyle Report for ${{ matrix.module }}
      run: cat checkstyle-result-${{ matrix.module }}.txt

  build:
    runs-on: ubuntu-latest
    needs: check

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt' # Oder 'zulu', 'amazon', etc.
        java-version: '17'
        
    - name: Build API with Gradle
      run: gradle "streamlinecloud-api:Make API Project"

    - name: Build MAIN with Gradle
      run: gradle "streamlinecloud-main:Make Main Project"

    - name: Build MC with Gradle
      run: gradle "streamlinecloud-mc:Make MC Project"
      
    - name: Sharing API Jar file with job
      uses: actions/upload-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_api_${{ github.sha }}
        path: finished_builds/streamlinecloud-api/*.jar

    - name: Sharing MAIN Jar file with job
      uses: actions/upload-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_main_${{ github.sha }}
        path: finished_builds/streamlinecloud-main/*.jar

    - name: Sharing MC Jar file with job
      uses: actions/upload-artifact@v3
      with:
        name: streamlinecloud_streamlinecloud_mc_${{ github.sha }}
        path: finished_builds/streamlinecloud-mc/*.jar

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    if: github.ref == 'refs/heads/production'

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Read release.json
      id: read_json
      run: |
        VERSION_TAG=$(jq -r '.version_tag' release.json)
        VERSION_DISPLAYNAME=$(jq -r '.version_displayname' release.json)
        VERSION_NUMERIC=$(jq -r '.version_numeric' release.json)
        CHANGELOG=$(jq -r '.changelog' release.json)
        echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
        echo "VERSION_DISPLAYNAME=$VERSION_DISPLAYNAME" >> $GITHUB_ENV
        echo "VERSION_NUMERIC=$VERSION_NUMERIC" >> $GITHUB_ENV
        echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: ${{ env.VERSION_NUMERIC }}
        title: ${{ env.VERSION_DISPLAYNAME }}
        prerelease: true
        files: |
            LICENCE.md
            *.jar
        release_notes: ${{ env.CHANGELOG }}

    - name: Upload Docker image digest
      run: echo "${{ github.sha }}" > image-digest.txt

    - name: Upload Docker image digest artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image-digest
        path: image-digest.txt

  docker:
    needs: release
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Read release.json
      id: read_json
      run: |
        VERSION_TAG=$(jq -r '.version_tag' release.json)
        VERSION_DISPLAYNAME=$(jq -r '.version_displayname' release.json)
        VERSION_NUMERIC=$(jq -r '.version_numeric' release.json)
        CHANGELOG=$(jq -r '.changelog' release.json)
        echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
        echo "VERSION_DISPLAYNAME=$VERSION_DISPLAYNAME" >> $GITHUB_ENV
        echo "VERSION_NUMERIC=$VERSION_NUMERIC" >> $GITHUB_ENV
        echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV
        
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t streamlinecloud-node .
        docker tag streamlinecloud-node creperozelot/streamlinecloud:${{ env.VERSION_NUMERIC }}
        docker push creperozelot/streamlinecloud:${{ env.VERSION_NUMERIC }}

    - name: Verify Docker image
      run: docker images | grep creperozelot/streamlinecloud
